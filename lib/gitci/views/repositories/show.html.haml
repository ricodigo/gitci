%ul(class="breadcrumb")
  %li
    %a(href="/")
      Home
    %span(class="divider")
      \/
  %li(class="active")
    %a(href="/repositories/#{@repository.id}")
      Repository
      =@repository.name

%h1
  =@repository.name

%h3
  Git Repository

%a(href="#{@repository.uri}")
  =@repository.uri

-if @repository.has_gemfile
  %pre{:style => "background: #bbb"}
    =@repository.bundle_output

-if @repository.has_coverage
  %a(href="#{@repository.coverage_path}")
    coverage

#newScriptFrom.modal.fade.hide{style: "display:none"}
  %form(action="/repositories/#{@repository.id}/scripts" method="post" name="create-script-form" class="well")
    .modal-header
      %a.close(data-dismiss="modal")
        Ã—
      %h3
        Add new Script

    .modal-body
      = haml :"scripts/_form.html", layout: false
    .modal-footer
      %input(type='submit' value='Add script' class="btn btn-primary")
      %a.btn(href="#")
        Close

%a.btn(href="#newScriptFrom" data-toggle="modal" data-target="#newScriptFrom" )
  Add New Script

-count = 0
-@repository.scripts.order(:created_at.desc).each do |script|
  -content_for :tab_nav do
    %li
      %a(href="##{script.id}" data-toggle="tab")
        &= script.name || "unamed #{count}"

  -content_for :tab_content do
    .tab-pane{id: script.id}
      =h script.command
      %a(href="/repositories/#{@repository.id}/scripts/#{script.id}/run" class="btn btn-success")
        Run
      %a(href="/repositories/#{@repository.id}/scripts/#{script.id}/delete" class="btn btn-danger")
        Delete
      %a(href="/repositories/#{@repository.id}/scripts/#{script.id}/edit" class="btn")
        Edit
      -running_tasks = script.build_tasks.where(:running => true).order(:created_at.desc).limit(20)
      -performed_tasks = script.build_tasks.where(:performed => true).order(:created_at.desc).limit(20)
      -if running_tasks.blank? && performed_tasks.blank?
        .alert.alert-info
          This script have been performed
      -else
        -unless running_tasks.blank?
          %div(class="accordion" id="tasks")
            .accordion-group
              -running_tasks.each do |task|
                .accordion-heading
                  %a(class="accordion-toggle" data-toggle="collapse" data-parent="#tasks" href="#task-#{task.id}")
                    = task.created_at

                .accordion-body.collapse.in{id: "task-#{task.id}"}
                  = haml :"repositories/_task.html", :locals => {:task => task}
        -unless performed_tasks.blank?
          .accordion-group
            -performed_tasks.each do |task|
              .accordion-heading
                %a(class="accordion-toggle" data-toggle="collapse" data-parent="#tasks" href="#task-#{task.id}")
                  = task.created_at
              .accordion-body.collapse.in{id: "task-#{task.id}"}
                =haml :"repositories/_task.html", :locals => {:task => task}

%ul.nav.nav-tabs
  = yield_content :tab_nav
.tab-content
  = yield_content :tab_content
