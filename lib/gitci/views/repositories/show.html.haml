%ul(class="breadcrumb")
  %li
    %a(href="/")
      Home
    %span(class="divider")
      \/
  %li(class="active")
    %a(href="/repositories/#{@repository.id}")
      &=@repository.name
      Repository

%h1
  &=@repository.name

.row-fluid
  .span4
    %h4
      Git Repository

    %a(href="#{@repository.uri}")
      =@repository.uri
    = @repository.fetched_at

    -if @repository.fail_on_fetch
      .alert.alert-error
        Fetching repository failed
  .span4
    %h4
      Status
      -failed = @repository.last_failed_ref == @repository.current_ref
      %span.pull-right.label{ class: failed ? "label-important" : "label-success" }
        = failed ? "FAILED" : "OK"

    Current ref:
    %strong
      = @repository.current_ref

    %br
    Last failed ref:
    %strong
      = @repository.last_failed_ref

    -if @repository.has_coverage
      %br
      Coverage:
      %strong
        %a(href="#{@repository.coverage_path}")
          url
  .span4
    %h4
      Feed url
    = @repository.feed_url
    = @repository.last_feed_at

#newScriptFrom.modal.fade.hide{style: "display:none"}
  %form(action="/repositories/#{@repository.id}/scripts" method="post" name="create-script-form" class="well")
    .modal-header
      %a.close(data-dismiss="modal")
        Ã—
      %h3
        Add new Script

    .modal-body
      = haml :"scripts/_form.html", layout: false
    .modal-footer
      %input(type='submit' value='Add script' class="btn btn-primary")
      %a.btn(href="#" data-dismiss="modal")
        Close

-count = 0
-@repository.scripts.order(:created_at.desc).each do |script|
  -content_for :tab_nav do
    %li
      %a(href="##{script.id}" data-toggle="tab")
        &= script.name || "unamed #{count}"

  -content_for :tab_content do
    .tab-pane{id: script.id}
      .row-fluid
        .span12
          .btn-group.pull-right
            %a(href="/repositories/#{@repository.id}/scripts/#{script.id}/run" class="btn btn-success")
              Run
            %a(href="/repositories/#{@repository.id}/scripts/#{script.id}/edit" class="btn")
              Edit
            %a(href="/repositories/#{@repository.id}/scripts/#{script.id}/delete" class="btn btn-danger" data-confirm='Are You Sure?')
              Delete
          %strong
            Command:
          =h script.command

      %h3
        Details
      -tasks = script.build_tasks.where.order(:created_at.desc).limit(20)
      -if tasks.blank?
        .alert.alert-info
          This script have been performed
      -else
        -unless tasks.blank?
          #accordion-tasks.accordion
            -first = true
            -tasks.each do |task|
              .accordion-group
                .accordion-heading
                  %a.accordion-toggle(data-parent="#accordion-tasks" data-toggle="collapse" href="#task#{task.id}")
                    Commit:
                    %strong
                      = task.commit_id || "unknown"
                    .pull-right
                      -if task.performed
                        == Finished on #{(task.finished_at||task.updated_at)}
                      -if task.running
                        %span.label.info
                          RUNNING
                      -else
                        -if task.failed
                          %span.label.label-important
                            FAILED
                        -else
                          %span.label.label-success
                            OK
                .accordion-body.collapse{id: "task#{task.id}", class: first && "in"}
                  .accordion-inner
                    = haml :"repositories/_task.html", :locals => {:task => task}, layout: false
              -first = false

%ul.nav.nav-tabs
  -if @repository.has_gemfile
    %li
      %a(href="#bundler" data-toggle="tab")
        Bundle output

  = yield_content :tab_nav
  %li.dropdown
    %a(href="#" class="dropdown-toggle" data-toggle="dropdown")
      Manage
      %b.caret
    %ul.dropdown-menu
      %li
        %a(href="#newScriptFrom" data-toggle="modal" data-target="#newScriptFrom" )
          %span.icon-plus-sign
          Add Script

.tab-content
  -if @repository.has_gemfile
    .tab-pane#bundler
      %pre{:style => "background: #bbb"}
        =@repository.bundle_output

  = yield_content :tab_content
